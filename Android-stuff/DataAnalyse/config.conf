[main]
input = *.log
output = system_behavior2.txt
insert_mode = TRUE
filter_sep = |
translate_sep = <-
regular_filter = .*Radio work 'connect'@0x.{8,8} done in.*|.*trans @\d{3,6} process .*
filter = SIP tuple|CallAnsweringOnUeAnswer answer after prack
 |AT+SPRTPMEDIASET|AT+SPMEDIACODEC|CIREP|CISRVCC|SPRTPCHANNEL|AT< +CME ERROR|AT< +CREG: 1
 |^CONN:|AT+CHLD=|+IMSHO|+VOWFREG|+IMSWFATT|+IMSHOWFINF|+IMSHOCALLEND|+VOWIFIEN
 |^DSCI:|+IMSEN|RIL_REQUEST_ENABLE_IMS|+IMSHOLTEINFU|+VOWIFISRV|+IMSHODATAROUTER=1
 |AT+SFUN=|WIFIPARAM|CGEV|+CGACT:1,1|+CGACT:2,1|+CGACT:3,1|+CGACT:11,1
 |On set the|process response
 |SRVCC update result|Srvcc
 |ImsService: EVENT_WIFI_|ImsService: EVENT_NOTIFY_CP_VOWIFI_ATTACH_SUCCESSED
 |updateLinkProperties|terminateAllCalls|getVolteRegisterState|EVENT_IMS_STATE_CHANGED|Ping IP address is reachable
 |going from CONNECTED to DISCONNECTED|updateImsFeatures
 |return only one ipsec|onServiceStateChanged showSpn|ImsCall : start|onImsPdnStatusChange
 |SecurityS2bBinder: INFO: pingCount|SessFqdnOnUeInit With Addr|Try to terminate all the calls
 |Reset the security and sip stack with wifi state
 |MRF: DEBUG: EndpGetActReg Reg is not exist.|Show Dialog: Can't call
 |imsbr   : set call state vowifi-call|EVENT_UPDATE_DATA_ROUTER_FINISHED|SECURITY IKE: INFO:   Next Payload: Configuration
 |SECURITY IKE: INFO:  Notify Message Type: INITIAL_CONTACT|Handle the event 'call_terminate' for the call
 |ImsCall : callSessionTerminated|ImsCall : processCallTerminated|IKE: INFO: DNS query record<A> ok.|DNS: INFO: SendQryReq primary dns server
 |PingHelper: execute command start : ping|ImsServiceImpl: getIMSRegAddress mImsRegAddress =|SECURITY IKE: INFO: SessDnsLookUp
 |SessFqdnIpv6OnDns|TunnelCheckDpd
 |InCall  : CallerInfoAsyncQuery - - number:|InCall  : CallerInfoAsyncQuery - - cookie:|loopProcessAudioQos|del vowifi tuple|add vowifi tuple
 |Mrf_RegRemoveExpiredIpsec|ImsVideoCallProviderImpl: On set the camera from|SecurityS2bBinder: INFO: notifyNetChange true|SessAuthOnResendTmr
 |Ike ResendTimer MsgId|Ike Config Not Support Mobike|Ike epdg Not support Mobike|InCall  : CallCardPresenter - Disconnecting
 |RegisterService: Try to reset the sip stack.|RegisterService: Try to start the de-register process|MRF: INFO: subs process [USER UNSUBSCRIBE]
 |MRF: INFO: endpoint process|Mrf_RegUnregingOnTeWaitU|Mrf_RegTearDownSa|SprocOn
 |calculateQosAverage: mQosLossAverage|calculateQosAverage: mQosJitterAverage|calculateQosAverage: mQosLatencyAverage
 |calculateSignalAverage: mWifiRssiAverage|calculateSignalAverage: mLteRsrpAverage|calculateSignalAverage: mQosWifiRssiAverage
 |ImsServiceImpl: setIMSRegAddress addr =|MTC: DEBUG: client reg state|volteip|Zos_ImsbrdEndCall
 |MRF: INFO: RegListenLocally security|Mrf_RegAddIpsecSA|Mrf_RegRmvIpsecSA
 |SECURITY IKE: INFO:   Type Payload: Delete|D LEMON   : SIP/2.0
 |VoWifiSerService|SECURITY IKE: INFO: Ike_MsgDump PayLd:(1)Delete
 |EVENT_WIFI_NETWORK_DISCONNECTED|VoWifiRegisterManager|RegisterServiceBinder|VoWifiManager|D LEMON   : REGISTER sip:|D LEMON   : SIP/2.0 200 OK
 |D LEMON   : SUBSCRIBE sip:|D LEMON   : NOTIFY sip:|D LEMON   : SIP/2.0 401 Unauthorized
 |EVENT_WIFI_NETWORK_CONNECTED|D LEMON   : INVITE sip:|D LEMON   : SIP/2.0 100 Trying|D LEMON   : SIP/2.0 183 Session Progress
 |D LEMON   : UPDATE sip:|D LEMON   : ACK sip:|D LEMON   : BYE sip:|VowifiServiceCallback|ImsVoWifiService|VoWifiSecurityS2bManager|I S2b     :
 |[IKE] sending DELETE for IKE_SA android|[IKE] initiating IKE_SA android|[ENC] generating IKE_SA_INIT request|[ENC] generating IKE_AUTH request
 |[IKE] authentication of 'IMS' with EAP successful|[IKE] ireton-获得ip地址-|[IKE] ireton-获得pcscf地址-
 |D LEMON   : SIP/2.0 503 Service Unavailable|I System.out:|ImsConnectionManagerService
 |D LEMON   : SIP/2.0 180 Ringing|D LEMON   : PRACK sip:|SecurityS2bCallback|[DMN] successfully created TUN|SIM MCC/MNC is
 |ImsCM Utils|EVENT_WIFI_ATTACH_FAILED|EVENT_WIFI_ATTACH_STOPED|EVENT_WIFI_ATTACH_SUCCESSED|failed to setup TUN device
 |Start vowifi call, now attach rules|volteRegistered:true|mWifiRegistered:true|data router
 |Zos_ImsbrdStartVowifiCall|Zos_ImsbrdStartVoLTECall|Zos_ImsbrdResetTuple|Start the audio for input and output|Stop the audio for input and output
 |ZOS: INFO: Client|Imsbrd enable vrt ok.|D LEMON   : SIP/2.0 404
 |RRE: DEBUG: reg report|Get the service logout callback|Get the register state changed callback|Get the security callback
 |ACTION_START_HANDOVER-> mFeatureSwitchRequest is exist|SECURITY IKE: INFO:  Notify Message Type: AUTHENTICATION_FAILED
 |CPVoiceAgent: [cp_optionget]: channel|RegRegingOnCimCnf try <6> times fail|NetworkUtils: Ping failed
 |requestUSimAuthentication|SIM_AUTHENTICATION|Vowifi handover to Volte !!!!!|Volte handover to Vowifi !!!!!



[main2]
input = imsbr.log
output = system_behavior2.txt
insert_mode = TRUE
regular_filter = .*


[Error]
input = system_behavior2.txt
output = system_ERROR2.txt
insert_mode = TRUE
filter_sep = |
filter = MTC: ERROR: imei format is not correct!|SECURITY IKE: INFO:  Notify Message Type: INTERNAL_ADDRESS_FAILURE
 |failed reason = Repetitive operation|return only one ipsec sa pstOnlyOneSA|[popup Vowifi unavailable notification]
 |AUTHENTICATION_FAILED|hung up IMS call|SECURITY IKE: INFO: SessAuthOnResendTmr Dpd Resend Timeout
 |can not re-register with empty info which used to handover|[Adapter]Utilities: Can not get the ip address
 |SessAuthOnResendTmr Send Event|SessAuthOnResendTmr Dpd Resend Timeout|SessAuthOnResendTmr Resend Out
 |failed reason = Already handle one request|Can't switch calls|EndpGetActReg Reg is not exist.|ERROR: S2bDeleteIpsec Failed
 |E [VoWifiService]RegisterService: Ping the pcscfIP|ImsConnectionManagerService: operationFailed|free twice
 |Cellular network is not available|NO PACKETS FROM CP, NEED CP CHECK IT FIRST|NO PACKETS RECV FROM WIFI, MAYBE IP CHANGED, SECURITY CHECK IT FIRST
 |NO VOWIFI TUPLES ADDED, BUT HANDOVER FROM VOWIFI TO VOLTE|NO VOLTE TUPLES ADDED, BUT HANDOVER FROM VOLTE TO VOWIFI
 |rejected (existing client(s) with higher priority)|JuIpsecServer: do_ip failed|VoWifiSecurityManager: Can not start attach as the current state is
 |+CIREGU: 3,0|clearLoopMsgQueue: remove all of "Loop Message Queue"|SocketLastErr:Invalid argument|logined state call logout
 |state <AKA REQ PROC> run [TPT EAP MSG EAP FAILED]|Handover packets overview: fromcp=0|SocketLastErr:Address already in use|Could not open input file ring/RingBack.wav
 |SECURITY IKE: ERROR: TunnelCheckDpd Start Timer|zxsocket: RTNETLINK answers (Cannot assign requested address)|zxsocket: RTNETLINK answers (No such file or directory)
 |zxsocket: RTNETLINK answers (File exists)|Ping IP address is unreachable|ACTION_DECLINE_INCOMING_CALL|ERROR: SendCmdToServer recvfrom|onProcessDpdDisconnectedError
 |ERROR: S2bDeleteIpsec bind socket errno|run [USER REGISTER] ignored event|send buf list|EAP Code: Failure|reRegister->type: -1 info: 000000000000
 |"MSG_HANDOVER_TO_VOLTE", mCurPendingProcessMsgId = "MSG_HANDOVER_TO_VOWIFI"|ERROR: socket bind failed|reg report register failed
 |ZOS: ERROR: PoolFree <zos memory> invalid redzone.|RegisterService: Get the challenge response: TAG = DC, AUTS|SocketLastErr:Operation now in progress
 |zxsocket: Command line is not complete|ZOS: ERROR: fsm(SIP_NIST)
equal_value_check = SECURITY IKE: INFO: Attribute: INTERNAL_IP6_ADDRESS |ImsServiceImpl: getIMSRegAddress mImsRegAddress = |
regular_filter =.*RegRegingOnCimCnf try <[0-9]> times fail.*

[Warning]
input = system_behavior2.txt
output = system_warning2.txt
insert_mode = TRUE
filter_sep = |
filter = ZOS: INFO: SocketLastErr:Invalid argument|ZOS: ERROR: sendto error|ZOS: ERROR: SendCmdToServer recvfrom
 |SECURITY IKE: INFO: Ike ResendTimer MsgId|Mrf_RegDelete|AT+CCMMD
regular_filter =.*volteip=$|.*IMSREGADDR:$|.*IMSHOCALLEND$

[user_events]
input = system_behavior2.txt
output = user_events2.txt
insert_mode = false
filter_sep = |
filter = The BSSID is empty|SessAuthOnResendTmr Dpd Resend Timeout|AT< +CIREG:2,1,0
 |subs process [USER UNSUBSCRIBE]|DhcpClient: Broadcasting DHCPDISCOVER|+IMSHORSTU:3<-register fail|+IMSHORSTU:5<-re-register fail
 |simState = READY|CGEV: NW PDN ACT|+CGEV: NW PDN DEACT|SessAuthOnResendTmr Resend Out|+IMSHORSTU:2<-ims pdn build fail|+IMSHORSTU:4<-re-register success
 |RECV_BYE|VoWifiSerService: Notify the event|Initiates an ims call with|RECV_CANCEL|VoWifiSerService: Received prack
 |Establish the session call|endpoint process|gui notify|IMSHO|VOWIFIEN|IMSWFATT
 |VOWFREG|WifiNetworkMonitor|AT+SFUN=5<-enalbe airplane mode|AT+SFUN=4<-disable airplane mode|CONN:|IMSREGADDR|IMSEN|refreshOk|refresh_ok|CIREPH|VOWIFCALLINF|createCallSession
 |EVENT_WIFI_INCOMING_CALL|CallCardPresenter - Disconnecting call|Terminate this call|VoWifiCallManager: Update the call state to data router. state
 |state <AUTHEND> to <IKEREKEY>|state <IKEREKEY> to <AUTHEND>|CIREGU: 6,0<-unregistering|CIREGU: 3,0<-register failed|SprocOnCallEvnt|+CMCCSI|AT< +CLCCS:
 |+VOWIFIPCSCF|+PCSCF

restrict_filter = call_rtcp_changed|SprocOnCallEvnt call rtcp rr|EVENT_WIFI_RSSI_CHANGED
regular_filter = .*Radio work 'connect'@0x.{8,8} done in.*|.*AT< \^DSCI: [0-9],0,0.*<-MO call active|.*AT< \^DSCI: [0-9],1,0.*<-MT call active
 |.*AT< \^DSCI: [0-9],1,4.*<-MT incoming call
 |.*AT< \^DSCI: [0-9],0,6.*<-MO call stop|.*AT< \^DSCI: [0-9],1,6.*<-MT call stop|.*AT< \^DSCI: [0-9],0,2.*<-MO call Dialing|.*AT< \^DSCI: [0-9].*|.*trans @\d{3,6} process.*



[SDK_media]
input = system_behavior2.txt
output = SDK_media2.txt
insert_mode = FALSE
filter_sep = |
filter = CPVoiceAgent|the call
restrict_filter = 
case_sensitive = FALSE


[ipaddress]
input = system_behavior2.txt
output = IP_address2.txt
insert_mode = FALSE
filter_sep = |
filter = ImsServiceImpl: getIMSRegAddress mImsRegAddress|SECURITY IKE: INFO: Attribute: INTERNAL_IP6_ADDRESS
 |SECURITY IKE: INFO: Attribute: INTERNAL_IP4_ADDRESS|IMSREGADDR|AT+IMSHO|AT+VOWIFIEN=0|AT+IMSWFATT=
 |AT+VOWFREG|CGEV: NW PDN DEACT|CGEV: NW ACT|setIMSRegAddress
restrict_filter = 

		
[volteregisterstate]
input = system_behavior2.txt
output = VolteRegisterState2.txt
insert_mode = FALSE
filter_sep = |
filter = ImsServiceImpl: getIMSRegAddress mImsRegAddress|SECURITY IKE: INFO: Attribute: INTERNAL_IP6_ADDRESS
 |SECURITY IKE: INFO: Attribute: INTERNAL_IP4_ADDRESS|IMSREGADDR|AT+IMSHO|AT+VOWIFIEN=0|AT+IMSWFATT=
 |AT+VOWFREG|CGEV: NW PDN DEACT|CGEV: NW ACT|setIMSRegAddress|Update the call state to data router|startVoWifiCall
 |startVoLteCall|EVENT_WIFI_ALL_CALLS_END|VolteRegisterState|^CONN|CIREGU: 6,0

[ipcall]
input = system_behavior2.txt
output = ip_call2.txt
insert_mode = FALSE
filter_sep = |
filter = ImsServiceImpl: getIMSRegAddress mImsRegAddress|SECURITY IKE: INFO: Attribute: INTERNAL_IP6_ADDRESS
 |SECURITY IKE: INFO: Attribute: INTERNAL_IP4_ADDRESS|IMSREGADDR|AT+IMSHO|AT+VOWIFIEN=0|AT+IMSWFATT=
 |AT+VOWFREG|CGEV: NW PDN DEACT|CGEV: NW ACT|setIMSRegAddress|Update the call state to data router|startVoWifiCall
 |startVoLteCall|EVENT_WIFI_ALL_CALLS_END|VolteRegisterState|^CONN|CIREGU: 6,0


[tcp_udp]
input = system_behavior2.txt
output = SDK_tcp_udp.txt
filter = RegListenLocally security|RegOpenLocally security|tpt Add a connection address|endpoint process|openx conn
 |tpt open tcp client conn|tpt open udp conn|open tcp server conn|transport check alive close conn|ZOS: INFO: sock
 |module ConnGet zConnBk|tpt close conn|close sock|destroy sock|module ConnPut conn|OsSockTaskEntry sockp
regular_filter = .*close conn\[0x\w{1,2}\] sockp.*|.*user\[\d{3,7}\] udp sockp.*
 |.*user\[\d{3,7}\] tcp sockp.*|.*trans @\d{3,6} process response.*


[tcp_ip]
input = system_behavior2.txt
output = tcp_ip.txt
filter = ZOS: INFO: Client Send: {"ZIpsecCmd":"ZIpsecIpCmd","Cmd":"ip|MRF: INFO: Client Send: {"Systemcmd":"ExcuteCmd","Cmd":"ip|D imsbr   : aptuple|ZOS: DEBUG: Imsbrd

#[tcp_ip_monitor]
#input = system_behavior2.txt
#output = tcp_ip_monitor.txt
#filter = ipxfrm_monitor|ip_monitor


[SDK_sip]
input = system_behavior2.txt
output = SDK_sip.txt
filter = The BSSID is empty|SessAuthOnResendTmr Dpd Resend Timeout|AT< +CIREG:2,1,0
 |subs process [USER UNSUBSCRIBE]|DhcpClient: Confirmed lease: IP address|DhcpClient: Broadcasting DHCPDISCOVER|+IMSHORSTU:3<-register fail|+IMSHORSTU:5<-re-register fail
 |simState = READY|Wifi-calling is enabled|CGEV: NW PDN ACT|+CGEV: NW PDN DEACT|SessAuthOnResendTmr Resend Out|+IMSHORSTU:2<-ims pdn build fail|+IMSHORSTU:4<-re-register success
 |RECV_BYE|VoWifiSerService: Notify the event|Initiates an ims call with|RECV_CANCEL|VoWifiSerService: Received prack
 |Establish the session call|endpoint process|gui notify|IMSHO|VOWIFIEN|IMSWFATT
 |VOWFREG|WifiNetworkMonitor|AT+SFUN=5<-enalbe airplane mode|AT+SFUN=4<-disable airplane mode|CONN:|IMSREGADDR|IMSEN|refreshOk|refresh_ok|CIREPH|VOWIFCALLINF|createCallSession
 |EVENT_WIFI_INCOMING_CALL|CallCardPresenter - Disconnecting call|Terminate this call|VoWifiCallManager: Update the call state to data router. state
 |state <AUTHEND> to <IKEREKEY>|state <IKEREKEY> to <AUTHEND>|CIREGU: 6,0<-unregistering|CIREGU: 3,0<-register failed
 |fsm(SIP_IVT)|fsm(SIP_IST)|fsm(MRF_REG) reg|fsm(SIP_VRTD) vrtd|fsm(SIP_NICT) trans|fsm(MTF_CALL)
 |fsm(MRF_SUBS) subs|endp |fsm(SIP_NIST) trans|endp |TmrStart start|start tmr|create tmr|ZOS: DEBUG: Imsbrd
restrict_filter = call_rtcp_changed
regular_filter = .*Radio work 'connect'@0x.{8,8} done in.*|.*AT< \^DSCI: [0-9],0,0.*<-MO call active|.*AT< \^DSCI: [0-9],1,0.*<-MT call active
 |.*AT< \^DSCI: [0-9],1,4.*<-MT incoming call
 |.*AT< \^DSCI: [0-9],0,6.*<-MO call stop|.*AT< \^DSCI: [0-9],1,6.*<-MT call stop|.*AT< \^DSCI: [0-9],0,2.*<-MO call Dialing|.*AT< \^DSCI: [0-9].*|.*trans @\d{3,6} process .*

[SDK_security]
input = system_behavior2.txt
output = SDK_security.txt
filter = fsm(IKE)|Mtc_S2bDbSetNetId|SECURITY IKE: INFO: start ike|SECURITY IKE: INFO: Ike_SessStart|SecurityService: Update the settings before start

[AKA]
input = system_behavior2.txt
output = SDK_AKA.txt
filter = Get the challenge response: TAG

[adapter]
input = system_behavior2.txt
output = adapter.txt
filter = [Adapter]|[VoWifiService]

[imscm]
input = system_behavior2.txt
output = imsCM.txt
filter = [ImsCM]

[telephony]
input = system_behavior2.txt
output = telephony.txt
filter = ImsService:|ImsServiceImpl:
